var geocoder;
var map;


// -------------- FUNCTIONS ------------
function maps() {
  function initialize() {
    geocoder = new google.maps.Geocoder();
    var mapOptions = {
      center: new google.maps.LatLng(37.754307, -122.437772),
      zoom: 12,
      mapTypeId: google.maps.MapTypeId.SATELLITE,
      mapTypeControlOptions: {
        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
      },
      zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL,
        position: google.maps.ControlPosition.RIGHT_BOTTOM
      },
      panControlOptions: {
        position: google.maps.ControlPosition.RIGHT_BOTTOM
      }
    };

    map = new google.maps.Map(document.getElementById("map"),
        mapOptions);
        
    // ---------------- KML FILES ---------------- 

    var sf_zipcodes = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/sfzipcodes.kml'
    });
    var low_liq_kml = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/modlowSFLiqui.kml'
    });
    var high_liq_kml = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/vhighhighSFLiqui.kml'
    });
    var neighborhood_kml = new google.maps.KmlLayer({
      url: 'https://maps.google.com/maps/ms?dg=feature&ie=UTF8&authuser=0&msa=0&output=kml&msid=216722849731329970375.0004a2f137271f66502f6'
    });
    var neighborhood_kml2 = new google.maps.KmlLayer({
      url: 'https://maps.google.com/maps/ms?ie=UTF8&hl=en&source=embed&dg=feature&authuser=0&msa=0&output=kml&msid=216722849731329970375.0004a2f13b9644a6edc2f'
    });
    var density = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/SF_Population_Density.kml'
    });
    var supervisor = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/Supervisor_Districts.kml'
    });
    var tsunami = new google.maps.KmlLayer({
      url: 'https://dl.dropboxusercontent.com/u/22757148/sf_tsunami_evacuation.kml'
    });
   

    var weatherLayer = new google.maps.weather.WeatherLayer({
      temperatureUnits: google.maps.weather.TemperatureUnit.FAHRENHEIT
    });

    var cloudLayer = new google.maps.weather.CloudLayer();
    

    //  ---------------- KML CALLS ---------------- 
   
    weatherLayer.setMap(map);

    cloudLayer.setMap(map);
    
    
    $('#resiliency').on('click', function(){
      $('.container').hide();
      $('.container2').hide();
      $(this).toggleClass('active');
      if($(this).attr('class') == 'map-buttons active'){
        $('#resilience-container').show();
        map.panTo(new google.maps.LatLng(37.800740, -122.439785));
        map.setZoom(15); 
        sf_zipcodes.setMap(map);
        sf_zipcodes.set('preserveViewport', true);
      } else {
        $('#resilience-container').hide();
        sf_zipcodes.setMap(null);
      }
    })
        
    function checkbox_toggle() {
      $('.checkbox').on('click', function(){

        var check_id = $(this).attr('id')
        $('.container').hide();
        $('.container2').hide();
        if ($('#'+check_id).is(':checked') == false) {
          switch (check_id) {
            case 'zip-check':
              sf_zipcodes.setMap(null);
              break;
            case 'neighbor-check':
              neighborhood_kml.setMap(null);
              neighborhood_kml2.setMap(null);
              break;
            case 'high_liq':
              low_liq_kml.setMap(null);
              break;
            case 'low_liq':
              high_liq_kml.setMap(null);
              break;
            case 'super-check':
              supervisor.setMap(null);
              break;
            case 'density-check':
              density.setMap(null);
              break;
            case 'tsunami':
              tsunami.setMap(null);
              break;
          }
        } else {
          switch (check_id) {
            case 'zip-check':
              sf_zipcodes.setMap(map);
              sf_zipcodes.set('preserveViewport', true);
              break;
            case 'neighbor-check':
              neighborhood_kml.setMap(map);
              neighborhood_kml2.setMap(map);
              break;
            case 'high_liq':
              low_liq_kml.setMap(map);
              // map.panTo(new google.maps.LatLng(37.769884, -122.459793));
              // map.setZoom(12); 
              low_liq_kml.set('preserveViewport', true);
              break;
            case 'low_liq':
              high_liq_kml.setMap(map);
              // map.panTo(new google.maps.LatLng(37.769884, -122.459793));
              // map.setZoom(12); 
              high_liq_kml.set('preserveViewport', true);
              break;
            case 'super-check':
              supervisor.setMap(map);
              supervisor.set('preserveViewport', true);
              break;
            case 'density-check':
              density.setMap(map);
              density.set('preserveViewport', true);
              break;
            case 'tsunami':
              tsunami.setMap(map);
              tsunami.set('preserveViewport', true);
              break;
          }
        }
      })
    }
    
    // data_markers();
    resource_markers()
    user_data()
    checkbox_toggle();
  }
    google.maps.event.addDomListener(window, 'load', initialize);
    
}

function boolean_quantities() {
  $('#user-resources').find('select').hide()
  $('#user-resources').find('input').on('click', function(){
    if ($(this).is(':checked') == true) {
      $(this).next().show()
      $(this).next().val(1)
    } else {
      $(this).next().hide()
      $(this).next().val(0)
    }
  })
  $("#user-resources").find("input:checked").next().show()
}

// ---------- CITY RESOURCES - FIRE, POLICE, HOSPITAL ------------------

function resource_markers() {
  var icon = "/images/policemarkercolored.png"
  var icon2 = "/images/firemanmarkercolored.png"
  var icon3 = "/images/hospitalmarkercolored.png"
  var bounds = new google.maps.LatLngBounds();

  $.getJSON("/resource", function(json) {
    $.each(json, function(key, data) {
      
      
      if (data.resource_type == 'police_station') {
        var police_marker = new google.maps.Marker({
          position: new google.maps.LatLng(data.lat, data.lng),
          map: map,
          icon: icon,
          title: 'hello'
        });
        var contentInfo = ("<strong>Name:</strong> "+data.name+"</br>"+"<strong>Address:</strong> "+" "+data.address+"</br>"+"<strong>Phone Number:</strong> "+data.phone_number+"</br>"+"<strong>Website:</strong> <a target='_blank' href="+data.website+">"+data.website+"</a>")
        police_marker.setMap(null);
        bounds.extend(police_marker.position);

        $('.checkbox').on('click', function(){

          if ($('#sf-police').is(':checked') == true) {
             police_marker.setMap(map);
             map.panTo(new google.maps.LatLng(37.769884, -122.459793));
             map.setZoom(12); 
          } else {

            police_marker.setMap(null);
          }
          var infowindow = new google.maps.InfoWindow({
              content: contentInfo
          });
          google.maps.event.addListener(police_marker, 'click', function() {
            infowindow.open(map,police_marker);
          });
        });
        
      } else if (data.resource_type == 'fire_station'){
        var fire_marker = new google.maps.Marker({
          position: new google.maps.LatLng(data.lat, data.lng),
          map: map,
          icon: icon2,
          title: 'hello'
        });
        var contentInfo = ("<strong>Name:</strong> "+data.name+"</br>"+"<strong>Address:</strong> "+" "+data.address+"</br>"+"<strong>Phone Number:</strong> "+data.phone_number+"</br>"+"<strong>Website:</strong> <a target='_blank' href="+data.website+">"+data.website+"</a>")
        fire_marker.setMap(null);
        bounds.extend(fire_marker.position);


        $('.checkbox').on('click', function(){

          if ($('#sf-fire').is(':checked') == true) {
             fire_marker.setMap(map);
             map.panTo(new google.maps.LatLng(37.769884, -122.459793));
             map.setZoom(12); 
          } else {

            fire_marker.setMap(null);
          }
          var infowindow = new google.maps.InfoWindow({
              content: contentInfo
          });
          google.maps.event.addListener(fire_marker, 'click', function() {
            infowindow.open(map,fire_marker);
          });
        });
        
      } else if (data.resource_type == 'hospital') {
        var hosp_marker = new google.maps.Marker({
          position: new google.maps.LatLng(data.lat, data.lng),
          map: map,
          icon: icon3,
          title: 'hello'
        });
        var contentInfo = ("<strong>Name:</strong> "+data.name+"</br>"+"<strong>Address:</strong> "+" "+data.address+"</br>"+"<strong>Phone Number:</strong> "+data.phone_number+"</br>"+"<strong>Website:</strong> <a target='_blank' href="+data.website+">"+data.website+"</a>")
        hosp_marker.setMap(null);

        $('.checkbox').on('click', function(){

          if ($('#sf-hosp').is(':checked') == true) {
             hosp_marker.setMap(map);
            map.panTo(new google.maps.LatLng(37.769884, -122.459793));
            map.setZoom(12); 
          } else {

            hosp_marker.setMap(null);
          }
          var infowindow = new google.maps.InfoWindow({
              content: contentInfo
          });
          google.maps.event.addListener(hosp_marker, 'click', function() {
            infowindow.open(map,hosp_marker);
          });
        });

      }
      
    })
  })
}

//  ----------- COMMUNITY RESOURCES DATA ------------------
function user_data() {
  var bounds = new google.maps.LatLngBounds();
  var icon;
  var oms = new OverlappingMarkerSpiderfier(map);
  

  $.getJSON("/users", function(json) {
    $.each(json, function(key, data) {
      var trues = [];
      var cNewName = "";
      $.each( data, function( key, value ) {
        switch (key) {
          case 'emergency':
          key = 'Emergency Kit';
          break;
          case 'carpenter':
          key = 'Carpenter';
          break;
          case 'firstaid':
          key = 'First Aid';
          break;
          case 'contractor':
          key = 'Contractor';
          break;
          case 'dumptruck':
          key = 'Dump Truck';
          break;
          case 'backhoe':
          key = 'Backhoe';
          break;
          case 'forklift':
          key = 'Fork Lift';
          break;
          case 'fuel':
          key = 'Fuel';
          break;
          case 'generator':
          key = 'Generator';
          break;
          case 'jackhammer':
          key = 'Jackhammer';
          break;
          case 'drill':
          key = 'Drill';
          break;
          case 'hammer':
          key = 'Hammer';
          break;
          case 'shovel':
          key = 'Shovel';
          break;
          case 'engineer':
          key = 'Structural Engineer';
          break;
          case 'underground':
          key = 'Underground Shelter';
          break;
          case 'overnight':
          key = 'Overnight Shelter';
          break;
          case 'oxygen':
          key = 'Oxygen';
          break;
          case 'wheelchair':
          key = 'Wheelchair';
          break;
          case 'defibrillation':
          key = 'Defibrillation';
          break;
          case 'firstresponder':
          key = 'First Responder';
          break;
          case 'inspector':
          key = 'Building Inspector';
          break;
          case 'commercial':
          key = 'Commercial License';
          break;
          case 'electrician':
          key = 'Electrician';
          break;
          case 'operator':
          key = 'Heave Equipment Operator';
          break;
          case 'kitchen':
          key = 'Commercial Kitchen';
          break;
          case 'bulldozer':
          key = 'Bulldozer';
          break;
          case 'excavator':
          key = 'Excavator';
          break;
          case 'frontloader':
          key = 'Front Loader';
          break;
          case 'reclaimer':
          key = 'Reclaimer';
          break;
          case 'trencher':
          key = 'Trencher';
          break;
          case 'tractor':
          key = 'Tractor';
          break;
          case 'goggles':
          key = 'Goggles';
          break;
          case 'axe':
          key = 'Axe';
          break;
          case 'plumber':
          key = 'Plumber';
          break;
        }
        if (key === 'cert' || key === 'nert' || key === 'cpr' || key === 'safe') {
        var upper = key.toUpperCase()
        } else {
          upper = key
        }
        if (value === true) {
          trues.push(upper)
        }
      });
      var newStr = trues.join(", ");
      var contentInfo = ("<strong>Name:</strong> "+" "+data.name+"</br>"+"<strong>Address:</strong> "+" "+data.address+"</br>"+"<strong>Phone Number:</strong> "+data.phone_number+"</br>"+"<strong>Email:</strong> "+" "+data.email+"</br>"+"<strong>Resources:</strong>"+"</br>"+newStr)

      $('.contact-owner').on('click', function(){
          $('.close').on('click', function(){
              $('.user-contact').remove()
              $('.modal-backdrop').remove()
          })
        if ($(this).prev().text().trim() == data.name) {
          var div = document.createElement('div');
          div.className = 'modal fade in user-contact';
          div.innerHTML ='<div class="modal-header"> <button class="close" data-dismiss="modal">x</button> <h2>'+$(this).prev().text().trim()+'</h2> </div>  <div class="modal-body"> '+'<strong>Email:</strong> '+data.email+'</br><strong>Phone Number:</strong> '+data.phone+'</br><strong>Address:</strong> '+data.address+" "+data.address2+'- San Francisco, CA'+'</div>'
          document.body.appendChild(div);
          $(".user-contact").modal('show');
        }
      })

      
      // if (data.name == user) {
        // icon = "<%= asset_path 'me.png' %>"
      // } else 
      if (data.school == true) {
        icon = "/images/SchoolIcon.png"
      } else if (data.church == true) {
        icon = "/images/churchicon.png"
      }else {
        icon = "/images/person.png"
      }

       var marker = new google.maps.Marker({
        position: new google.maps.LatLng(data.latitude, data.longitude),
        map: map,
        icon: icon,
        title: 'hello'
      });
      var infowindow = new google.maps.InfoWindow({
          content: contentInfo
        });
       

      $('.resource_links').on('click', function(){
        $('.resource_links').not($(this)).removeClass('active');

        r_name = $(this).attr('class').split(' ')[1].split('_')[1]
        var path = "/images/"+r_name+".png"


        if($(this).hasClass('active') == true) {
          if(data[r_name] == true) { 
            icon = "/images/"+r_name+".png" 
            // marker.setIcon(path)
            var marker = new google.maps.Marker({
              position: new google.maps.LatLng(data.latitude, data.longitude),
              map: map,
              icon: path,
              title: 'hello'
            });
          }
        } else {
          $(this).removeClass('active');
          // if (data.school == true) {
          //    marker.setIcon("/images/SchoolIcon.png")
          // } else if (data.church == true) {
          //   marker.setIcon("/images/churchicon.png")
          // } else {
          //   marker.setIcon("/images/person.png")
          // }
        }
      })
      oms.addListener('click', function(marker, event) {
        // console.log('cluster clikins')
        // infowindow.setContent(marker.desc);
        infowindow.open(map, marker);
      });

     

      $('.name').mouseover(function(){
        if($(this).text().trim() == data.name) {
          marker.setAnimation(google.maps.Animation.BOUNCE);
        }
      })
      $('.name').mouseout(function(){
        marker.setAnimation(null);
      })

      marker.setMap(null);

      



      // $('#users').children().first().on('click', function(){
      //   $('#community').removeClass('active');
      //   marker.setMap(null);
      // })
      
      // bounds.extend(marker.position);
      $('#community').on('click', function(){
        $('#print-container').hide();
         if ($(this).attr('class') == 'map-buttons active') {
          $('#users').show();
          marker.setMap(map);
          // map.fitBounds(bounds);
        } else {
          $('#users').hide();
          marker.setMap(null);
        }
        

        $('.name').on('click', function(){
          if($(this).text().trim() == data.name) {
            infowindow.open(map,marker);
          }
        })

        // var iw = new google.maps.InfoWindow();

        

        // oms.addListener('spiderfy', function(markers) {
        //   for(var i = 0; i < markers.length; i ++) {
        //     markers[i].setIcon(iconWithColor(spiderfiedColor));
        //     markers[i].setShadow(null);
        //   } 
        //   infowindow.close();
        // });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.open(map,marker);
        });
      });

    });
  })
}

//  --------------- PRINTING ---------------


function gmapPrint(){
  // map.panTo(new google.maps.LatLng(37.800740, -122.294949));
  // var content = window.document.getElementById('map') // get you map details
  // var newWindow = window.open(); // open a new window
  // newWindow.document.write(content.innerHTML); // write the map into the new window
  // newWindow.print(); // print the new window

  
    var content = window.document.getElementById('user-print') // get you map details
    var newWindow = window.open(); // open a new window
    // newWindow.document.writeln('<link href="./assets/application.css" media="all" rel="stylesheet">');
    newWindow.document.writeln(content.innerHTML);
    newWindow.print();


  // win = window.open('/images/map.png',"_blank");
  // win.onload = function() { win.print(); }
}

function button_clicks() {

  $('#prepare').on('click', function(){
    $('.container').hide();
    $('.container2').hide();
    $('#print-container').hide();
    $('#prepare-container').show();
  })
    
  $('#advanced-search').on('click', function(){
    $('.container').hide();
    $('.container2').hide();
    $('#print-container').hide();
    $('#advanced-container').show();
  })
  $('#recovery').on('click', function(){
    $('.container').hide();
    $('.container2').hide();
    $('#print-container').hide();
    $('#recovery-container').show();
  })
  $('#myaccount').on('click', function(){
    $('.container').hide();
    $('.container2').hide();
    $('#print-container').hide();
    $('#account-container').show();
  })
  $('#print').on('click', function(){
    // console.log('clicked on print button')
    $('.container').hide();
    $('.container2').hide();
    $('#print-container').show();
  })
  
  // $('.contact').on('click', function(){
  //   $('.container').hide();
  //   $('.container2').hide();
  //   $('#contact-container').show();
  // })
  var zip_click = ''
  $('.zip-click').on('click', function(){
    zip_click = $(this).text()
    console.log(zip_click)
    // $('.user-table').append('<tr><td>column 1 value</td><td>column 2 value</td></tr>')
    // $('#someTable > tbody > tr:first').after(newRow);
    // $('#table tr:last').after('<tr><td>column 1 value</td><td>column 2 value</td></tr>');
  })
  // "<% User.where(zip: "+zip_click+").each do |u| %><tr><th style='min-width: 140px;'><%= u.name %><br/><%= u.address %><%= u.address2 %></th><% u.attributes.each do |attr_name, attr_value| %><% if attr_value == true || attr_value == false %><td><%= image_tag('#{attr_value}.png', size: '20x20') %></td><% end %><% end %></tr><% end %>"
}

$.fn.serializeObject = function() {
  var values = {}
  $("form input, form select, form textarea").each( function(){
    values[this.name] = $(this).val();
  });
  return values;
}

function ajax_signup() {
  $("#login").submit(function(e){
   e.preventDefault(); //This prevents the form from submitting normally
   var user_info = $(this).serializeObject();
   console.log("About to post to /users: " + JSON.stringify(user_info));
   $.ajax({
     type: "POST",
     url: "/users/sign_in",
     data: user_info,
     success: function(json){
       console.log("The Devise Response: " + JSON.stringify(json));
       //alert("The Devise Response: " + JSON.stringify(json));
     },
     dataType: "json"
   });
});
}




//  ----------- ON DOCUMENT READY --------------
$(function() {

  // if (user) {
  //   console.log(user)
  // } else {
  //   console.log('no sessions')
  // }

  // $("#login").bind("ajax:success", function(e, data, status, xhr) {
  //   // window.location.replace("/");
  //   if (data.success) {
  //     console.log('we signed in mofo!')
  //     $('#login').modal('hide');
  //     // $('#account-container').show()
  //     console.log(data)
  //     // $('#sign_up_button').hide();
  //     // return $('#submit_comment').slideToggle(1000, "easeOutBack");
  //   } else {
  //     console.log('failure mofo')
  //   }
  // });

  $('.container').hide();
  $('.close').on('click', function() {
    $('.container').css('display', 'none');
    $('.container2').css('display', 'none');
  })
  maps();
  button_clicks();
  boolean_quantities()
  // ajax_signup()

  $('.resource_links').on('click', function(){
    $(this).toggleClass('active');
  })

  $('#community').on('click', function() {
    $(this).toggleClass('active');
  })


});